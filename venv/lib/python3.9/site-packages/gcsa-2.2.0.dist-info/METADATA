Metadata-Version: 2.1
Name: gcsa
Version: 2.2.0
Summary: Simple API for Google Calendar management
Home-page: https://github.com/kuzmoyev/google-calendar-simple-api
Author: Yevhen Kuzmovych
Author-email: kuzmovych.yevhen@gmail.com
License: MIT
Keywords: python conference calendar hangouts python-library event conferences google-calendar pip recurrence google-calendar-api attendee gcsa
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
License-File: LICENSE
Requires-Dist: tzlocal (<5,>=4)
Requires-Dist: google-api-python-client (>=1.8)
Requires-Dist: google-auth-httplib2 (>=0.0.4)
Requires-Dist: google-auth-oauthlib (<1.0,>=0.5)
Requires-Dist: python-dateutil (>=2.7)
Requires-Dist: beautiful-date (>=2.0.0)
Provides-Extra: dev
Requires-Dist: setuptools ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-pep8 ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pyfakefs ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: pep8-naming ; extra == 'dev'
Requires-Dist: twine ; extra == 'dev'
Requires-Dist: tox ; extra == 'dev'
Requires-Dist: sphinx ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme ; extra == 'dev'
Provides-Extra: docs
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme ; extra == 'docs'
Provides-Extra: tests
Requires-Dist: setuptools ; extra == 'tests'
Requires-Dist: pytest ; extra == 'tests'
Requires-Dist: pytest-pep8 ; extra == 'tests'
Requires-Dist: pytest-cov ; extra == 'tests'
Requires-Dist: pyfakefs ; extra == 'tests'
Requires-Dist: flake8 ; extra == 'tests'
Requires-Dist: pep8-naming ; extra == 'tests'
Requires-Dist: twine ; extra == 'tests'
Requires-Dist: tox ; extra == 'tests'

Google Calendar Simple API
==========================

.. image:: https://badge.fury.io/py/gcsa.svg
    :target: https://badge.fury.io/py/gcsa
    :alt: PyPi Package

.. image:: https://readthedocs.org/projects/google-calendar-simple-api/badge/?version=latest
    :target: https://google-calendar-simple-api.readthedocs.io/en/latest/?badge=latest
    :alt: Documentation Status

.. image:: https://github.com/kuzmoyev/Google-Calendar-Simple-API/workflows/Tests/badge.svg
    :target: https://github.com/kuzmoyev/Google-Calendar-Simple-API/actions
    :alt: Tests

.. image:: https://badgen.net/badge/icon/discord?icon=discord&label
    :target: https://discord.gg/mRAegbwYKS
    :alt: Discord


`Google Calendar Simple API` or `gcsa` is a library that simplifies event and calendar management in Google Calendars.
It is a Pythonic object oriented adapter for the official API. See the full `documentation`_.

Installation
------------

.. code-block:: bash

    pip install gcsa

See `Getting started page`_ for more details and installation options.

Example usage
-------------

List events
~~~~~~~~~~~

.. code-block:: python

    from gcsa.google_calendar import GoogleCalendar

    calendar = GoogleCalendar('your_email@gmail.com')
    for event in calendar:
        print(event)


Create event
~~~~~~~~~~~~

.. code-block:: python

    from gcsa.event import Event

    event = Event(
        'The Glass Menagerie',
        start=datetime(2020, 7, 10, 19, 0),
        location='Záhřebská 468/21',
        minutes_before_popup_reminder=15
    )
    calendar.add_event(event)


Create recurring event
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

    from gcsa.recurrence import Recurrence, DAILY

    event = Event(
        'Breakfast',
        start=date(2020, 7, 16),
        recurrence=Recurrence.rule(freq=DAILY)
    )
    calendar.add_event(event)


**Suggestion**: use beautiful_date_ to create `date` and `datetime` objects in your
projects (*because its beautiful... just like you*).


References
----------

Template for `setup.py` was taken from `kennethreitz/setup.py`_


.. _documentation: https://google-calendar-simple-api.readthedocs.io/en/latest/?badge=latest
.. _`Getting started page`: https://google-calendar-simple-api.readthedocs.io/en/latest/getting_started.html
.. _beautiful_date: https://github.com/kuzmoyev/beautiful-date
.. _`kennethreitz/setup.py`: https://github.com/kennethreitz/setup.py
